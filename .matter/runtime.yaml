root-folder: core
before-command: |-
  #!/bin/bash
  set -e

  echo "Installing dependencies for Stencil components..."

  # Navigate to core directory where the actual Stencil project lives
  cd /mnt/jetbrains/work/DarkMatter-o-0-p-3HDLWe3yDK64-r-e3d2f4f1/core
  echo "Current directory: $(pwd)"

  # Install npm dependencies, ignoring post-install scripts to avoid Puppeteer issues
  echo "Installing npm packages (ignoring post-install scripts)..."
  npm install --ignore-scripts

  # Install missing TypeScript definitions (CRITICAL - fixes build errors)
  echo "Installing missing TypeScript type definitions..."
  npm install --save-dev @types/glob@^7.2.0 @types/minimatch@^5.1.2

  # Generate CSS files (CRITICAL - without this, Stencil build fails)
  echo "Generating CSS files from SCSS sources..."
  npm run css.sass

  # Fix import syntax in index.ts (CRITICAL - fixes Rollup export error)
  echo "Fixing import syntax in src/index.ts..."
  sed -i "s/export { Components, JSX } from '\.\/components';/export * from '\.\/components.d';/g" src/index.ts

  # Build the project (CRITICAL - creates www/ directory and compiled assets)
  echo "Building Stencil project..."
  npm run build

  # Create .env file to skip React preflight check for webpack version conflicts
  echo "Creating .env file..."
  echo "SKIP_PREFLIGHT_CHECK=true" > .env

  echo "Environment preparation completed successfully!"
  echo "CSS files generated in core/css/"
  echo "Project built in core/dist/ and core/www/"
  echo "Ready to start Stencil development server..."
preview-command: |-
  #!/bin/bash
  set -e

  echo "Starting Stencil development server..."

  # Navigate to core directory
  cd /mnt/jetbrains/work/DarkMatter-o-0-p-3HDLWe3yDK64-r-e3d2f4f1/core

  # Start the Stencil development server
  echo "Running: npm start"
  npm start
preview-port: 3333
